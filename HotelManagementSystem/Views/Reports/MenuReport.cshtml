@model IEnumerable<HotelManagementSystem.Models.Menu>
@{
    ViewData["Title"] = "Menu Report - Hotel Management System";
}

<style>
    .page-header {
        background: linear-gradient(135deg, #8b5cf6 0%, #5b21b6 100%);
        color: white;
        padding: 2rem 0;
        margin: -2rem -15px 2rem -15px;
        border-radius: 0 0 20px 20px;
        position: relative;
        overflow: hidden;
    }

        .page-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 60 60"><defs><pattern id="grid" width="60" height="60" patternUnits="userSpaceOnUse"><path d="M 60 0 L 0 0 0 60" fill="none" stroke="%23ffffff" stroke-width="1" opacity="0.1"/></pattern></defs><rect width="60" height="60" fill="url(%23grid)"/></svg>');
            opacity: 0.3;
        }

    .page-header-content {
        position: relative;
        z-index: 2;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .page-subtitle {
        font-size: 1.1rem;
        opacity: 0.9;
        margin-bottom: 0;
    }

    .menu-container {
        background: white;
        border-radius: 20px;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        margin-bottom: 2rem;
    }

    .menu-header {
        background: linear-gradient(135deg, #7c3aed 0%, #c084fc 100%);
        padding: 1.5rem 2rem;
        border-bottom: 1px solid #e2e8f0;
    }

    .menu-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: #1e293b;
        margin-bottom: 0;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .search-filter-bar {
        background: #f8fafc;
        padding: 1.5rem 2rem;
        border-bottom: 1px solid #e2e8f0;
    }

    .search-row {
        display: flex;
        align-items: center;
        gap: 1.5rem;
        flex-wrap: wrap;
    }

    .search-box {
        position: relative;
        flex: 1;
        max-width: 400px;
    }

    .search-input {
        width: 100%;
        padding: 0.75rem 1rem 0.75rem 3rem;
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        font-size: 0.95rem;
        transition: all 0.3s ease;
        background: white;
    }

        .search-input:focus {
            outline: none;
            border-color: #7c3aed;
            box-shadow: 0 0 0 3px rgba(225, 29, 72, 0.1);
        }

    .search-icon {
        position: absolute;
        left: 1rem;
        top: 50%;
        transform: translateY(-50%);
        color: #64748b;
        font-size: 1rem;
    }

    .filter-buttons {
        display: flex;
        gap: 0.75rem;
        flex-wrap: wrap;
    }

    .filter-btn {
        padding: 0.5rem 1rem;
        border: 2px solid #e2e8f0;
        border-radius: 8px;
        background: white;
        color: #64748b;
        font-size: 0.85rem;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 0.3px;
    }

        .filter-btn:hover,
        .filter-btn.active {
            border-color: #6d28d9;
            background: #6d28d9;
            color: white;
            transform: translateY(-1px);
        }

    .stats-summary {
        background: white;
        border-radius: 16px;
        padding: 1.5rem 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .stat-item {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .stat-icon {
        width: 50px;
        height: 50px;
        background: linear-gradient(135deg, #ddd6fe 0%, #c4b5fd 100%);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #1e293b;
        font-size: 1.25rem;
    }

    .stat-content h4 {
        font-size: 1.5rem;
        font-weight: 700;
        color: #6d28d9;
        margin: 0;
    }

    .stat-content p {
        margin: 0;
        color: #64748b;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .menu-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 1.5rem;
        padding: 2rem;
    }

    .menu-card {
        background: white;
        border-radius: 16px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        transition: all 0.3s ease;
        border: 2px solid transparent;
        position: relative;
    }

        .menu-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
            border-color: #6d28d9;
        }

    .menu-card-header {
        background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
        padding: 1.25rem;
        position: relative;
    }

    .menu-item-icon {
        width: 60px;
        height: 60px;
        background: linear-gradient(135deg, #6d28d9 0%, #a78bfa 100%);
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.5rem;
        margin-bottom: 1rem;
    }

    .menu-item-name {
        font-size: 1.25rem;
        font-weight: 700;
        color: #1e293b;
        margin-bottom: 0.5rem;
        line-height: 1.3;
    }

    .menu-item-category {
        background: linear-gradient(135deg, #ddd6fe 0%, #c4b5fd 100%);
        color: #1e293b;
        padding: 0.25rem 0.75rem;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        display: inline-block;
    }

    .menu-card-body {
        padding: 1.25rem;
    }

    .price-section {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 1rem;
    }

    .menu-price {
        font-size: 1.75rem;
        font-weight: 800;
        color: #059669;
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

    .currency-symbol {
        font-size: 1.25rem;
        color: #64748b;
    }

    .price-badge {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 600;
        box-shadow: 0 2px 8px rgba(16, 185, 129, 0.3);
    }

    .menu-table {
        margin: 0;
        border: none;
        display: none; /* Hidden by default, shown when table view is selected */
    }

        .menu-table thead th {
            background: linear-gradient(135deg, #1e293b 0%, #374151 100%);
            color: white;
            border: none;
            padding: 1.25rem 1.5rem;
            font-weight: 600;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .menu-table tbody td {
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid #e2e8f0;
            vertical-align: middle;
            font-size: 0.95rem;
        }

        .menu-table tbody tr {
            transition: all 0.3s ease;
            cursor: pointer;
        }

            .menu-table tbody tr:hover {
                background: linear-gradient(135deg, rgba(221, 214, 254, 0.1) 0%, rgba(225, 29, 72, 0.05) 100%);
                transform: scale(1.002);
            }

    .table-item-name {
        font-weight: 600;
        color: #1e293b;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .table-item-icon {
        width: 40px;
        height: 40px;
        background: linear-gradient(135deg, #6d28d9 0%, #a78bfa 100%);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1rem;
    }

    .table-price {
        font-weight: 700;
        font-size: 1.1rem;
        color: #059669;
    }

    .view-toggle {
        display: flex;
        gap: 0.5rem;
        margin-left: auto;
    }

    .view-btn {
        padding: 0.5rem 1rem;
        border: 2px solid #e2e8f0;
        border-radius: 8px;
        background: white;
        color: #64748b;
        font-size: 0.85rem;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 0.4rem;
    }

        .view-btn:hover,
        .view-btn.active {
            border-color: #6d28d9;
            background: #6d28d9;
            color: white;
        }

    .empty-state {
        text-align: center;
        padding: 4rem 2rem;
        color: #64748b;
        background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    }

    .empty-icon {
        font-size: 4rem;
        color: #ddd6fe;
        margin-bottom: 1rem;
    }

    .back-btn {
        background: linear-gradient(135deg, #a78bfa 0%, #a855f7 100%);
        color: white;
        border: none;
        padding: 0.75rem 2rem;
        border-radius: 12px;
        font-weight: 600;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(100, 116, 139, 0.3);
        text-transform: uppercase;
        font-size: 0.9rem;
        letter-spacing: 0.5px;
        margin-top: 2rem;
    }

        .back-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(100, 116, 139, 0.4);
            color: white;
            text-decoration: none;
        }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes slideInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .fade-in {
        animation: fadeIn 0.5s ease-out;
    }

    .slide-in {
        animation: slideInUp 0.6s ease-out;
    }

    @@media (max-width: 768px) {
        .page-title {
            font-size: 2rem;
        }

        .search-row {
            flex-direction: column;
            align-items: stretch;
        }

        .search-box {
            max-width: 100%;
        }

        .filter-buttons,
        .view-toggle {
            justify-content: center;
            margin-top: 1rem;
        }

        .stats-summary {
            flex-direction: column;
            text-align: center;
        }

        .menu-grid {
            grid-template-columns: 1fr;
            padding: 1rem;
        }

        .menu-table thead th,
        .menu-table tbody td {
            padding: 0.75rem 0.5rem;
        }
    }</style>

<!-- Page Header -->
<div class="page-header">
    <div class="container page-header-content">
        <div class="row align-items-center">
            <div class="col-md-8">
                <h1 class="page-title">
                    <i class="fas fa-utensils"></i>
                    Menu Report
                </h1>
                <p class="page-subtitle">Comprehensive overview of your restaurant menu and pricing</p>
            </div>
            <div class="col-md-4 text-md-end">
                <i class="fas fa-book-open" style="font-size: 4rem; opacity: 0.3;"></i>
            </div>
        </div>
    </div>
</div>

@if (Model != null && Model.Any())
{
    <!-- Statistics Summary -->
    <div class="stats-summary slide-in">
        <div class="stat-item">
            <div class="stat-icon">
                <i class="fas fa-utensils"></i>
            </div>
            <div class="stat-content">
                <h4>@Model.Count()</h4>
                <p>Total Menu Items</p>
            </div>
        </div>
        <div class="stat-item">
            <div class="stat-icon">
                <i class="fas fa-dollar-sign"></i>
            </div>
            <div class="stat-content">
                <h4>@string.Format("{0:C}", Model.Average(m => (double)m.Price))</h4>
                <p>Average Price</p>
            </div>
        </div>
        <div class="stat-item">
            <div class="stat-icon">
                <i class="fas fa-chart-line"></i>
            </div>
            <div class="stat-content">
                <h4>@string.Format("{0:C}", Model.Min(m => m.Price)) - @string.Format("{0:C}", Model.Max(m => m.Price))</h4>
                <p>Price Range</p>
            </div>
        </div>
    </div>

    <!-- Menu Container -->
    <div class="menu-container slide-in">
        <!-- Menu Header -->
        <div class="menu-header">
            <h2 class="menu-title">
                <i class="fas fa-list"></i>
                Menu Directory
            </h2>
        </div>

        <!-- Search and Filter Bar -->
        <div class="search-filter-bar">
            <div class="search-row">
                <div class="search-box">
                    <i class="fas fa-search search-icon"></i>
                    <input type="text" class="search-input" placeholder="Search menu items..." id="menuSearch">
                </div>
                <div class="filter-buttons">
                    <button class="filter-btn active" data-filter="all">All Items</button>
                    <button class="filter-btn" data-filter="low">Under $10</button>
                    <button class="filter-btn" data-filter="medium">$10 - $20</button>
                    <button class="filter-btn" data-filter="high">Over $20</button>
                </div>
                <div class="view-toggle">
                    <button class="view-btn active" data-view="grid">
                        <i class="fas fa-th-large"></i>
                        Grid
                    </button>
                    <button class="view-btn" data-view="table">
                        <i class="fas fa-list"></i>
                        Table
                    </button>
                </div>
            </div>
        </div>

        <!-- Grid View -->
        <div class="menu-grid" id="menuGrid">
            @foreach (var menu in Model)
            {
                <div class="menu-card fade-in" data-price="@menu.Price" data-name="@menu.ItemName.ToLower()">
                    <div class="menu-card-header">
                        <div class="menu-item-icon">
                            <i class="fas fa-utensils"></i>
                        </div>
                        <h3 class="menu-item-name">@menu.ItemName</h3>
                        <span class="menu-item-category">Main Course</span>
                    </div>
                    <div class="menu-card-body">
                        <div class="price-section">
                            <div class="menu-price">
                                <span class="currency-symbol">$</span>
                                @string.Format("{0:F2}", menu.Price)
                            </div>
                            <div class="price-badge">
                                @string.Format("{0:C}", menu.Price)
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Table View -->
        <div class="table-responsive" id="menuTable">
            <table class="table menu-table">
                <thead>
                    <tr>
                        <th><i class="fas fa-utensils me-2"></i>Item Name</th>
                        <th><i class="fas fa-dollar-sign me-2"></i>Price</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var menu in Model)
                    {
                        <tr class="menu-row" data-price="@menu.Price" data-name="@menu.ItemName.ToLower()">
                            <td>
                                <div class="table-item-name">
                                    <div class="table-item-icon">
                                        <i class="fas fa-utensils"></i>
                                    </div>
                                    <span>@menu.ItemName</span>
                                </div>
                            </td>
                            <td>
                                <span class="table-price">@string.Format("{0:C}", menu.Price)</span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}
else
{
    <div class="menu-container slide-in">
        <div class="empty-state">
            <i class="fas fa-utensils empty-icon"></i>
            <h3>No Menu Items Found</h3>
            <p>Your menu appears to be empty. Add some delicious items to get started!</p>
        </div>
    </div>
}

<!-- Back Button -->
<div class="text-center">
    <a asp-action="Index" asp-controller="Home" class="back-btn">
        <i class="fas fa-arrow-left"></i>
        Back to Dashboard
    </a>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('menuSearch');
        const filterButtons = document.querySelectorAll('.filter-btn');
        const viewButtons = document.querySelectorAll('.view-btn');
        const menuGrid = document.getElementById('menuGrid');
        const menuTable = document.getElementById('menuTable');
        const menuCards = document.querySelectorAll('.menu-card');
        const menuRows = document.querySelectorAll('.menu-row');

        let currentFilter = 'all';
        let currentView = 'grid';

        // Search functionality
        if (searchInput) {
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();
                filterItems(searchTerm, currentFilter);
            });
        }

        // Filter functionality
        filterButtons.forEach(button => {
            button.addEventListener('click', function() {
                filterButtons.forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');
                currentFilter = this.dataset.filter;

                const searchTerm = searchInput ? searchInput.value.toLowerCase() : '';
                filterItems(searchTerm, currentFilter);
            });
        });

        // View toggle functionality
        viewButtons.forEach(button => {
            button.addEventListener('click', function() {
                viewButtons.forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');
                currentView = this.dataset.view;

                if (currentView === 'grid') {
                    menuGrid.style.display = 'grid';
                    menuTable.style.display = 'none';
                    menuTable.querySelector('.menu-table').style.display = 'none';
                } else {
                    menuGrid.style.display = 'none';
                    menuTable.style.display = 'block';
                    menuTable.querySelector('.menu-table').style.display = 'table';
                }
            });
        });

        // Filter items function
        function filterItems(searchTerm, priceFilter) {
            const items = currentView === 'grid' ? menuCards : menuRows;

            items.forEach(item => {
                const name = item.dataset.name;
                const price = parseFloat(item.dataset.price);

                let matchesSearch = !searchTerm || name.includes(searchTerm);
                let matchesFilter = true;

                switch(priceFilter) {
                    case 'low':
                        matchesFilter = price < 10;
                        break;
                    case 'medium':
                        matchesFilter = price >= 10 && price <= 20;
                        break;
                    case 'high':
                        matchesFilter = price > 20;
                        break;
                    case 'all':
                    default:
                        matchesFilter = true;
                }

                if (matchesSearch && matchesFilter) {
                    item.style.display = '';
                    item.style.animation = 'fadeIn 0.3s ease';
                } else {
                    item.style.display = 'none';
                }
            });
        }

        // Add hover effects to cards
        menuCards.forEach(card => {
            card.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-8px) scale(1.02)';
            });

            card.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(-5px) scale(1)';
            });
        });

        // Add click effects to filter buttons
        filterButtons.forEach(button => {
            button.addEventListener('click', function() {
                this.style.transform = 'scale(0.95)';
                setTimeout(() => {
                    this.style.transform = '';
                }, 150);
            });
        });

        // Animate items on page load
        setTimeout(() => {
            menuCards.forEach((card, index) => {
                setTimeout(() => {
                    card.style.animation = 'fadeIn 0.6s ease-out forwards';
                }, index * 100);
            });
        }, 300);

        // Initialize table view as hidden
        menuTable.querySelector('.menu-table').style.display = 'none';
    });

    // Add additional animations
    const additionalStyles = document.createElement('style');
    additionalStyles.textContent = `
        .menu-container {
            animation: slideInUp 0.6s ease-out;
        }

        .stats-summary {
            animation: slideInUp 0.8s ease-out;
        }

    @@keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        .menu-item-icon:hover {
            animation: pulse 0.6s ease-in-out;
        }
    `;
    document.head.appendChild(additionalStyles);
</script>